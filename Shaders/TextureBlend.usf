#include "/Engine/Private/Common.ush"
#include "/Engine/Private/SceneTexturesCommon.ush"
Texture2D InTexture;
Texture2D SceneTexture;
SamplerState ClampSampler;
RWTexture2D<float4> OutTexture;
float Weight;
#if PIXELSHADER
void MainPS(float4 Position:SV_Position,out float4 OutTextureColor:SV_Target0)
{
	float SizeX,SizeY;
	OutTexture.GetDimensions(SizeX,SizeY);
	float2 UV = Position.xy / float2(SizeX,SizeY);
	float4 SampleColor = InTexture.SampleLevel(ClampSampler,UV,0);
	float3 OriginalColor = SceneTexture.SampleLevel(ClampSampler,UV,0).xyz;
	float Depth = 1.f;
#if DEPTHBLEND
	Depth = 1.f - LookupDeviceZ(UV);
#endif
	float3 OutColor = lerp(OriginalColor,SampleColor.xyz,Weight * Depth * SampleColor.a);
	OutTextureColor= float4(OutColor,1.f);
}
#endif

#if COMPUTESHADER
[numthreads(THREADGROUP_SIZEX, THREADGROUP_SIZEY, 1)]
void MainCS(uint2 DispatchThreadID : SV_DispatchThreadID)
{
	float SizeX,SizeY;
	OutTexture.GetDimensions(SizeX,SizeY);
	float2 UV = float2(DispatchThreadID + 0.5) / float2(SizeX,SizeY);
	float4 SampleColor = InTexture.SampleLevel(ClampSampler,UV,0);
	float3 OriginalColor = SceneTexture.SampleLevel(ClampSampler,UV,0).xyz;
	float Depth = 1.f;
#if DEPTHBLEND
	Depth = 1.f - ConvertFromDeviceZ(LookupDeviceZ(UV)) / 10000.f;
#endif
	float3 OutColor = lerp(OriginalColor,SampleColor.xyz,Weight * Depth * SampleColor.a);
	OutTexture[DispatchThreadID] = float4(OutColor,1.f);
}
#endif