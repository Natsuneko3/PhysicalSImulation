#include "/Engine/Private/Common.ush"
#include "/Engine/Private/SceneTexturesCommon.ush"
#include "/Engine/Private/ShaderPrint.ush"

#define SIGMA 10.0
#define BSIGMA 5.0
#define MSIZE 5

Texture2D ColorTexture;
Texture2D SimulationTexture;
SamplerState ColorTextureSampler;
SamplerState SimulationTextureSampler;


float normpdf(in float x, in float sigma)
{
	return 0.39894*exp(-0.5*x*x/(sigma*sigma))/sigma;
}

float normpdf3(in float3 v, in float sigma)
{
	return 0.39894*exp(-0.5*dot(v,v)/(sigma*sigma))/sigma;
}

void MainPS(in float4 SvPosition:SV_position,out float4 OutColor0 : SV_Target0)
{
	float2 UV = SvPositionToBufferUV(SvPosition);
	float4 OutTexture = SimulationTexture.SampleLevel(SimulationTextureSampler,UV,0);
	float SceneDepth = CalcSceneDepth(UV);
	float Visibility = SceneDepth > OutTexture.a? 0:1;
	float3 InColor  = ColorTexture.SampleLevel(ColorTextureSampler,UV ,0).xyz;

	float2 SceneColorUV = UV + OutTexture .xy * OutTexture.b * View.BufferSizeAndInvSize.zw;
	float3 SceneColor = Texture2DSampleLevel(SceneTexturesStruct.SceneColorTexture, SimulationTextureSampler, SceneColorUV, 0).rgb;//CalcSceneColor(UV);
	float3 FinalColor = lerp(SceneColor, InColor, OutTexture.b * 0.7 * Visibility);

	OutColor0 =  float4(FinalColor,1);
}