#include "/Engine/Private/Common.ush"
#include "/Engine/Private/SceneTexturesCommon.ush"
RWTexture2D<float4> OutTexture;

float LineWeight;
float LineThreshold;
float4 LineColor;
[numthreads(THREADGROUP_SIZEX, THREADGROUP_SIZEY, 1)]
void MainCS(uint2 DispatchThreadID : SV_DispatchThreadID)
{
	float2 Resolution;
	OutTexture.GetDimensions(Resolution.x,Resolution.y);
	float2 UV = float2(DispatchThreadID + 0.5f) / Resolution;
	float2 AddUV[4] = {float2(-1,-0),float2(1,0),float2(0,1),float2(0,-1)};
	float2 Texel;
	OutTexture.GetDimensions(Texel.x,Texel.y);
	Texel = 1 / Texel;

	float RoundNormal = 0;

	float CenterDepth = min(ConvertFromDeviceZ(LookupDeviceZ(UV)),100000.0);
	float3 CenterNormal =  SceneTexturesStruct.GBufferATexture.SampleLevel(SceneTexturesStruct.PointClampSampler,UV,0).xyz;
	float Line = 0.f;

	for(int x = 0;x<4; x++)
	{
		float3 OtherNormal = SceneTexturesStruct.GBufferATexture.SampleLevel(SceneTexturesStruct.PointClampSampler,UV + AddUV[x] * Texel * LineWeight,0).xyz;
		float Depth =min(ConvertFromDeviceZ( LookupDeviceZ(UV + AddUV[x] * Texel * LineWeight)),100000);
		Line += Depth;//abs(Depth - CenterDepth);
		RoundNormal += dot(CenterNormal,OtherNormal);
	}

	//Line = saturate( ceil(Line -  CenterDepth * 4) - LineThreshold);
	Line = saturate(ceil(dot(CenterNormal,CenterNormal)*4-RoundNormal - LineThreshold));
	OutTexture[DispatchThreadID] =float4(LineColor.xyz,Line);

}